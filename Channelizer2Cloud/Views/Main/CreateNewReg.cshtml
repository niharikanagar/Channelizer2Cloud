@model Channelizer2Cloud.ViewModel.RegistrationViewModel
@{
    ViewBag.Title = "CreateNewReg";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<h2>Create New Registration</h2>

<p>
    @Html.ActionLink("Back", "Home", "Main") 
</p>
@using (Html.BeginForm())
{
    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Deal Name", htmlAttributes: new { @class = "control-label" }) <span style="color:red;">*</span>

                @Html.EditorFor(model => model.DealName, new { htmlAttributes = new { @class = "form-control", required="required" } })
                @Html.ValidationMessageFor(model => model.DealName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Deal Description", htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.DealDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DealDescription, "", new { @class = "text-danger" })
            </div>
            <br />
            <button id="SaleRepBtn" class="form-control btn-primary" type="button">Add Sales Representative</button>
        </div>
        <div class="col-md-6">
        </div>
    </div>

    <div class="row">
        <div id="SaleRepForm">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("SalesRep First Name", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.SaleRepFirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.SaleRepFirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("SalesRep Email", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SaleRepEmail, new { htmlAttributes = new { @class = "form-control", @type="email" } })
                    @Html.ValidationMessageFor(model => model.SaleRepEmail, "", new { @class = "text-danger" })
                </div>
                <br />
                <button id="CustomerBtn" class="form-control btn-primary" type="button">End Customer Company</button>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("SalesRep Last Name", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.SaleRepLastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.SaleRepLastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("SalesRep Phone", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.SaleRepPhone, new { htmlAttributes = new { @class = "form-control",required="required", @type = "tel" , @pattern = "[0-9]{10}" } })
                    @Html.ValidationMessageFor(model => model.SaleRepPhone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div id="CustomerForm">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Name", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Address 2", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group">
            @Html.Label("Country", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })

            @Html.DropDownList("Country", (IEnumerable<SelectListItem>)@ViewBag.CountryList, "-- Select--", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>*@
        <div class="form-group">
            @Html.Label("Country", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
           
                @Html.DropDownList("Country", (IEnumerable<SelectListItem>)ViewBag.GetCountryList, "-- Select--", new { id = "ddlCountry", @class = "form-control", required = "required" })
            
        </div>
        <div class="form-group">
            @Html.Label("City", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.Label("Website", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
        </div>
        <br />
        <button id="CustomerContactBtn" class="form-control btn-primary" type="button">Customer Contact</button>
        </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Address 1", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Address 3", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Address3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address3, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("State", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @*@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control",@id="ddlState" } })*@
                    @Html.DropDownList("State", new SelectList(""), "--Select State--", new { @class = "form-control", @id = "ddlState", required = "required" })
                    @*@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })*@
                </div>
                <div class="form-group">
                    @Html.Label("Postal Code", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div id="CustomerContactForm">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("First Name", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Title", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Phone", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" ,required = "required", @type = "tel", @pattern = "[0-9]{10}" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Mobile", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
                <br />
                <button id="ProgramSelectionBtn" class="form-control btn-primary" type="button">Program Selection</button>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Last Name", htmlAttributes: new { @class = "control-label" })<span style="color:red;">*</span>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Email", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" ,@type="Email"} })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Fax", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div id="ProgramSelectionForm">
            <div class="col-md-12">
                @foreach (var field in ViewBag.GetProgramList)
                {
                    <div class="col-md-4 ProgramSelection">
                        <input name="ProgramId" type="radio" value=@field.Value required />
                        <div class="tile">@field.Text</div>
                    </div>
                }
            </div>

        </div>
        <div class="col-md-6">
            <button id="CreateDealDraft" class="form-control btn-primary" type="submit">Next</button>
        </div>
        <div class="col-md-6">

        </div>
    </div>

}



@section scripts {

    <script>
        $(document).ready(function () {
            $('#SaleRepBtn').click(function () {
                $('#SaleRepForm').toggle();
            });
            $('#CustomerBtn').click(function () {
                $('#CustomerForm').toggle();
            });
            $('#CustomerContactBtn').click(function () {
                $('#CustomerContactForm').toggle();
            });
            $('#ProgramSelectionBtn').click(function () {
                $('#ProgramSelectionForm').toggle();
            });

            //Bind State Dropdown
           
            $("#ddlCountry").change(function () {
                $.get("/Main/GetStateList", { countryId: $("#ddlCountry").val() }, function (data) { 
                   // $("#ddlState").append("<option>--Select State --</option>")
                    $.each(data, function (index, row) {
                        $("#ddlState").append("<option value='" + row.Value + "'>" + row.Text + "</option>")
                    });
                });
            });
                


        });
    </script>


}


